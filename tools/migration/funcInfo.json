[
  {
    "name": "DPPNXML",
    "declLine1": "async function DPPNXML(filein,which,add)"
  },
  {
    "name": "DPPNXMLHistory",
    "declLine1": "async function DPPNXMLHistory(opts) {"
  },
  {
    "name": "DPRBottomPaneUpdateStyle",
    "declLine1": "function DPRBottomPaneUpdateStyle() {"
  },
  {
    "name": "DPRShowBottomPane",
    "declLine1": "function DPRShowBottomPane(tabIdToActivate = 'D') {"
  },
  {
    "name": "DPRSidebarDocument",
    "declLine1": "function DPRSidebarDocument() {"
  },
  {
    "name": "DPRSidebarWindow",
    "declLine1": "function DPRSidebarWindow() {"
  },
  {
    "name": "DPR_PAL_Search_ClearSearchResults",
    "declLine1": "function DPR_PAL_Search_ClearSearchResults() {"
  },
  {
    "name": "DPR_PAL_Search_ScrollSearch",
    "declLine1": "function DPR_PAL_Search_ScrollSearch(what) {"
  },
  {
    "name": "DPR_keypress",
    "declLine1": "function DPR_keypress(e) {"
  },
  {
    "name": "__assign",
    "declLine1": "function assign() { [native code] }"
  },
  {
    "name": "__extends",
    "declLine1": "function(e,t){function n(){this.constructor=e}c(e,t),e[o]=null===t?i(t):(n[o]=t[o],new n)}"
  },
  {
    "name": "addATIJS",
    "declLine1": "function addATIJS() {"
  },
  {
    "name": "addJS",
    "declLine1": "function addJS(files) {"
  },
  {
    "name": "addPhrasePreps",
    "declLine1": "function addPhrasePreps(words,i,type,alts) {"
  },
  {
    "name": "addPlural",
    "declLine1": "function addPlural(word,type) {"
  },
  {
    "name": "alertFlash",
    "declLine1": "function alertFlash(text,color) {"
  },
  {
    "name": "analyzeTextPad",
    "declLine1": "function analyzeTextPad(text) {"
  },
  {
    "name": "analyzeword",
    "declLine1": "function analyzeword (oneword, parts, partnames, shortdefpre, lastpart, parttrick) {"
  },
  {
    "name": "arrangeWords",
    "declLine1": "function arrangeWords(wordst,alts) {"
  },
  {
    "name": "atiPause",
    "declLine1": "function atiPause(getstring) {"
  },
  {
    "name": "atiSearchOffline",
    "declLine1": "function atiSearchOffline(d, getstring) {"
  },
  {
    "name": "atiSearchStart",
    "declLine1": "function atiSearchStart() {"
  },
  {
    "name": "bounce",
    "declLine1": "async function bounce(sct)"
  },
  {
    "name": "changeAlt",
    "declLine1": "async function changeAlt(e,i) {"
  },
  {
    "name": "changeConversion",
    "declLine1": "function changeConversion(inout)"
  },
  {
    "name": "changecss",
    "declLine1": "function changecss(myclass,element,value) {"
  },
  {
    "name": "checkCompatibleNoun",
    "declLine1": "function checkCompatibleNoun(input,chosen,words) {"
  },
  {
    "name": "checkCompatibleVerb",
    "declLine1": "function checkCompatibleVerb(input,chosen,words) {"
  },
  {
    "name": "checkLastTab",
    "declLine1": "function checkLastTab() {"
  },
  {
    "name": "checkbackground",
    "declLine1": "function checkbackground() {"
  },
  {
    "name": "clearDivs",
    "declLine1": "function clearDivs(which) { // place divs to be cleared here"
  },
  {
    "name": "clearPad",
    "declLine1": "function clearPad() {"
  },
  {
    "name": "clearText",
    "declLine1": "function clearText() {"
  },
  {
    "name": "clearboth",
    "declLine1": "function clearboth()"
  },
  {
    "name": "closeBrowser",
    "declLine1": "function closeBrowser(id) {"
  },
  {
    "name": "closeDPRSidebar",
    "declLine1": "function closeDPRSidebar() {"
  },
  {
    "name": "closePanel",
    "declLine1": "function closePanel() {"
  },
  {
    "name": "compareVersions",
    "declLine1": "async function compareVersions([nikaya,book,meta,volume,vagga,sutta,section,hier,alt],para,stringra,add) {"
  },
  {
    "name": "conjugate",
    "declLine1": "function conjugate(word, id, which) {"
  },
  {
    "name": "conjugateIrrNoun",
    "declLine1": "function conjugateIrrNoun(word) {"
  },
  {
    "name": "conjugateIrrVerb",
    "declLine1": "function conjugateIrrVerb(word,which) {"
  },
  {
    "name": "conjugateNoun",
    "declLine1": "function conjugateNoun(word) {"
  },
  {
    "name": "conjugateVerb",
    "declLine1": "function conjugateVerb(word) {"
  },
  {
    "name": "conjugateWord",
    "declLine1": "async function conjugateWord(word,form) {"
  },
  {
    "name": "conjugateWords",
    "declLine1": "async function conjugateWords(input) {"
  },
  {
    "name": "convert",
    "declLine1": "function convert(check,lower)"
  },
  {
    "name": "convtitle",
    "declLine1": "function convtitle(nikaya,book,una,vna,wna,xna,yna,zna,hiert,oneline,click)"
  },
  {
    "name": "countVals",
    "declLine1": "function countVals(a) {"
  },
  {
    "name": "createBrowser",
    "declLine1": "function createBrowser(thisDocument,url,count){"
  },
  {
    "name": "createCommands",
    "declLine1": "function createCommands() {"
  },
  {
    "name": "createShortcutFns",
    "declLine1": "function createShortcutFns() {"
  },
  {
    "name": "createSplitter",
    "declLine1": "function createSplitter(thisDocument,count){"
  },
  {
    "name": "createTables",
    "declLine1": "function createTables(xmlDoc,hiert)"
  },
  {
    "name": "createTdForMatch",
    "declLine1": "function createTdForMatch(dups, match) {"
  },
  {
    "name": "dalert",
    "declLine1": "function dalert(a) { }"
  },
  {
    "name": "ddump",
    "declLine1": "function ddump(a) { }"
  },
  {
    "name": "devO",
    "declLine1": "function devO() { }"
  },
  {
    "name": "displayDictData",
    "declLine1": "function displayDictData(data) {"
  },
  {
    "name": "dump",
    "declLine1": "() => { }"
  },
  {
    "name": "eventSend",
    "declLine1": "function eventSend(event,internal) {"
  },
  {
    "name": "fadeIn",
    "declLine1": "function fadeIn(AID,id,speed,L,sOut) {"
  },
  {
    "name": "fadeInOut",
    "declLine1": "function fadeInOut(AID,id, sIn, L, sOut) {"
  },
  {
    "name": "fadeOut",
    "declLine1": "function fadeOut(AID,id,speed) {"
  },
  {
    "name": "findDPRTab",
    "declLine1": "function findDPRTab(id,loc) {"
  },
  {
    "name": "findDPRTabByLoc",
    "declLine1": "function findDPRTabByLoc(loc) {"
  },
  {
    "name": "findDPRTabs",
    "declLine1": "function findDPRTabs(id,loc) {"
  },
  {
    "name": "findRegEx",
    "declLine1": "function findRegEx(text,string) {"
  },
  {
    "name": "findmatch",
    "declLine1": "function findmatch(oneword,lastpart,nextpart,partslength,trick)"
  },
  {
    "name": "finishSearch",
    "declLine1": "function finishSearch() {"
  },
  {
    "name": "formatConjugation",
    "declLine1": "async function formatConjugation(word) {"
  },
  {
    "name": "formatuniout",
    "declLine1": "function formatuniout(data,which) { // which = 1 prepare without links, 2 with links"
  },
  {
    "name": "getAtthXML",
    "declLine1": "async function getAtthXML(num,type,niklist) { // get atthakatha or tika word"
  },
  {
    "name": "getBrowserCount",
    "declLine1": "function getBrowserCount() {"
  },
  {
    "name": "getConjugation",
    "declLine1": "async function getConjugation(form,bare) {"
  },
  {
    "name": "getDppnData",
    "declLine1": "async function getDppnData(link){"
  },
  {
    "name": "getNameHTML",
    "declLine1": "function getNameHTML(dEI,tt) {"
  },
  {
    "name": "getRegExtSearchString",
    "declLine1": "function getRegExtSearchString(string) {"
  },
  {
    "name": "getSelected",
    "declLine1": "function getSelected() {"
  },
  {
    "name": "getTitleXML",
    "declLine1": "async function getTitleXML(num,mul,att,tik,niklist) { // get titles for title search"
  },
  {
    "name": "getconfig",
    "declLine1": "function getconfig() {"
  },
  {
    "name": "giveIDtoTabs",
    "declLine1": "function giveIDtoTabs() { // startup function, give ids to"
  },
  {
    "name": "importXMLindex",
    "declLine1": "async function importXMLindex(add) {"
  },
  {
    "name": "importXMLs",
    "declLine1": "async function importXMLs(cnt)"
  },
  {
    "name": "insertWordByWord",
    "declLine1": "async function insertWordByWord() {"
  },
  {
    "name": "installGlobalHandlers",
    "declLine1": "function installGlobalHandlers() {"
  },
  {
    "name": "isDPRTab",
    "declLine1": "function isDPRTab(id) {"
  },
  {
    "name": "isIndec",
    "declLine1": "function isIndec(word) { // indeclinible"
  },
  {
    "name": "isUncomp",
    "declLine1": "function isUncomp(word,lp,np) { // uncompoundable"
  },
  {
    "name": "iterCompare",
    "declLine1": "function iterCompare(p1,p2,iter, one, two) {"
  },
  {
    "name": "joinArray",
    "declLine1": "function joinArray(s,a) {"
  },
  {
    "name": "linkToPED",
    "declLine1": "function linkToPED(base,word) {"
  },
  {
    "name": "loadXMLSection",
    "declLine1": "async function loadXMLSection(querystring,para,place,isPL,scroll,compare)"
  },
  {
    "name": "loadXMLindex",
    "declLine1": "async function loadXMLindex(place,compare) {"
  },
  {
    "name": "mainInitialize",
    "declLine1": "async function mainInitialize() {"
  },
  {
    "name": "makeGrammarTerms",
    "declLine1": "function makeGrammarTerms([trans,type,deca,word,meta]) {"
  },
  {
    "name": "makeTable",
    "declLine1": "function makeTable(text,cls) {"
  },
  {
    "name": "makeToolbox",
    "declLine1": "function makeToolbox(shortcutFns,main,aux,title,conv,ex,save,trans) {"
  },
  {
    "name": "makeUniqueStringForCaseInsensitiveFS",
    "declLine1": "function makeUniqueStringForCaseInsensitiveFS(s) {"
  },
  {
    "name": "makeWord",
    "declLine1": "function makeWord(word,pl,alts) {"
  },
  {
    "name": "manualCompound",
    "declLine1": "function manualCompound(fullword) {"
  },
  {
    "name": "moveFrame",
    "declLine1": "function moveFrame() { }"
  },
  {
    "name": "normalizeLongSearchResult",
    "declLine1": "function normalizeLongSearchResult(match) {"
  },
  {
    "name": "openDPRSidebar",
    "declLine1": "function openDPRSidebar() {"
  },
  {
    "name": "openDPRTab",
    "declLine1": "function openDPRTab(permalink, id, reuse) {"
  },
  {
    "name": "openFirstDPRTab",
    "declLine1": "function openFirstDPRTab() {"
  },
  {
    "name": "openPlace",
    "declLine1": "async function openPlace([nikaya,book,meta,volume,vagga,sutta,section,hiert,alt],para,stringra,add) {"
  },
  {
    "name": "openTranslation",
    "declLine1": "function openTranslation(url,add) {"
  },
  {
    "name": "openXMLindex",
    "declLine1": "async function openXMLindex(nikaya,bookno,hier,add) {"
  },
  {
    "name": "outputAnalysis",
    "declLine1": "async function outputAnalysis(input,frombox) {"
  },
  {
    "name": "outputFormattedData",
    "declLine1": "function outputFormattedData(data,which,place,shortcutFns) // calls text prep, then outputs it to preFrame"
  },
  {
    "name": "paliXML",
    "declLine1": "async function paliXML(filein,which,add)"
  },
  {
    "name": "paliXMLHistory",
    "declLine1": "async function paliXMLHistory(opts) {"
  },
  {
    "name": "pausesall",
    "declLine1": "async function pausesall()"
  },
  {
    "name": "pausethree",
    "declLine1": "async function pausethree() {"
  },
  {
    "name": "pausetwo",
    "declLine1": "async function pausetwo() { // init function for single collection"
  },
  {
    "name": "permalinkClick",
    "declLine1": "function permalinkClick(link,url) {"
  },
  {
    "name": "preparepali",
    "declLine1": "function preparepali(data,which) { // standard text prep for algorithm"
  },
  {
    "name": "reindexPanels",
    "declLine1": "function reindexPanels() {"
  },
  {
    "name": "resetvalues",
    "declLine1": "function resetvalues() {"
  },
  {
    "name": "resolveCommands",
    "declLine1": "function resolveCommands(shortcutFns) {"
  },
  {
    "name": "saveCompilation",
    "declLine1": "function saveCompilation() {"
  },
  {
    "name": "savePad",
    "declLine1": "function savePad() {"
  },
  {
    "name": "scrollSearch",
    "declLine1": "function scrollSearch(what) {"
  },
  {
    "name": "searchTipitaka",
    "declLine1": "async function searchTipitaka(searchType,searchString,searchMAT,searchSet,searchBook,searchPart,searchRX) {"
  },
  {
    "name": "sendAnalysisToOutput",
    "declLine1": "async function sendAnalysisToOutput(input, divclicked, frombox, add){"
  },
  {
    "name": "sendAtt",
    "declLine1": "async function sendAtt(x,type,nik,add) {"
  },
  {
    "name": "sendDPPNXML",
    "declLine1": "async function sendDPPNXML(link,add) {"
  },
  {
    "name": "sendPaliXML",
    "declLine1": "async function sendPaliXML(link,add) {"
  },
  {
    "name": "sendPlace",
    "declLine1": "function sendPlace(place) {"
  },
  {
    "name": "sendTitle",
    "declLine1": "async function sendTitle(x,m,a,t,nik,add) {"
  },
  {
    "name": "sendTranslate",
    "declLine1": "function sendTranslate(input, add){"
  },
  {
    "name": "sendUpdateBookmarks",
    "declLine1": "async function sendUpdateBookmarks() {"
  },
  {
    "name": "sendtoPad",
    "declLine1": "function sendtoPad(data,shift)"
  },
  {
    "name": "sendtoconvert",
    "declLine1": "function sendtoconvert(data,shift)"
  },
  {
    "name": "setCurrentTitle",
    "declLine1": "function setCurrentTitle(title) {"
  },
  {
    "name": "setupBTForRG",
    "declLine1": "async function setupBTForRG() {"
  },
  {
    "name": "showAltTable",
    "declLine1": "function showAltTable(idx) {"
  },
  {
    "name": "showonly",
    "declLine1": "function showonly(string) {"
  },
  {
    "name": "sidebarSearch",
    "declLine1": "async function sidebarSearch(nik,book,hiert) {"
  },
  {
    "name": "simpleWordTranslation",
    "declLine1": "async function simpleWordTranslation(word) {"
  },
  {
    "name": "sktRXML",
    "declLine1": "async function sktRXML(no,add)"
  },
  {
    "name": "sktXML",
    "declLine1": "async function sktXML(entry,idx,which,add)"
  },
  {
    "name": "sortLongerDec",
    "declLine1": "function sortLongerDec(a,b) {"
  },
  {
    "name": "stopSearch",
    "declLine1": "function stopSearch() {"
  },
  {
    "name": "stripEnglish",
    "declLine1": "function stripEnglish(input) {"
  },
  {
    "name": "toggleDPRSidebar",
    "declLine1": "function toggleDPRSidebar() {"
  },
  {
    "name": "toggleDppnTitle",
    "declLine1": "async function toggleDppnTitle(link,id) {"
  },
  {
    "name": "transMod",
    "declLine1": "function transMod([trans,type,deca,word,meta]) {"
  },
  {
    "name": "translateText",
    "declLine1": "async function translateText(alts) {"
  },
  {
    "name": "translateTextFromBottomPane",
    "declLine1": "async function translateTextFromBottomPane(element) {"
  },
  {
    "name": "translateTextx",
    "declLine1": "function translateTextx() {"
  },
  {
    "name": "translateWord",
    "declLine1": "async function translateWord(word,idx) {"
  },
  {
    "name": "triggerPrivacyNoticeAcceptanceCheck",
    "declLine1": "function triggerPrivacyNoticeAcceptanceCheck() {"
  },
  {
    "name": "typeAndGender",
    "declLine1": "function typeAndGender(t) {"
  },
  {
    "name": "updatePrefs",
    "declLine1": "function updatePrefs() {"
  },
  {
    "name": "wrapLink",
    "declLine1": "function wrapLink(text,click,url) {"
  }
]
